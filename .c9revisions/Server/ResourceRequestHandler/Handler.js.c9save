{"ts":1359906540116,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"//Copyright (c) 2012 Samarth AGARWAL \n//Permission is hereby granted, free of charge, \n//to any person obtaining a copy of this software and associated documentation files (the \"Software\"), \n//to deal in the Software without restriction, \n//including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, \n//and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n//The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n//THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, \n//EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \n//FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. \n//IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, \n//DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, \n//ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n//Loading modules\n\nvar fs = require(\"fs\");\nvar url = require(\"url\");\nvar Tools = require(\"./Functions\");\n\n\n//Defining variables\nvar content = \"\";\nvar code = 500;\nvar MimeType;\nvar Encoding;\nvar PathName;\n//What a log should look like\nvar ToLog = {\n    \"RecivedAt\": 0,\n    \"Sender\": \"\",\n    \"ItemRequested\": {\"Name\": \"\", \"MimeType\": \"\", \"Extension\": \"\", \"OriginalRequest\": \"\", \"Encoding\": \"\"},\n    \"Response\": {\"MimeType\": \"\", \"code\": 0, \"SentAt\": 0,},\n\n    \"Errors\": []\n};\nvar RecivedAt = 0;\nvar SentAt = 0;\n//function to handle most to all web requests\nvar HandleRequest = function(request, response) {\n    RecivedAt = Date.now() / 1000;\n    //Gets request\n    ToLog = { \"RecivedAt\": 0, \"Sender\": \"\", \"ItemRequested\": {\"Name\": \"\", \"MimeType\": \"\", \"Extension\": \"\", \"OriginalRequest\": \"\", \"Encoding\": \"\"}, \"Response\": {\"MimeType\": \"\", \"code\": 0, \"SentAt\": 0,}, \"Errors\": []};\n    ToLog.RecivedAt = RecivedAt;\n    ToLog.Sender = request.connection.from;\n    PathName = url.parse(request.url).pathname;\n    ToLog.ItemRequested.OriginalRequest = PathName;\n    //Corrects Request\n    PathName = PathName.charAt(0) === \"/\" && PathName.length === 1 ? \"index.html\" : PathName;\n    PathName = PathName.charAt(0) === \"/\" ? PathName.substring(1, PathName.length) : PathName;\n    ToLog.ItemRequested.Name = PathName;\n    //Process the FileNames and gets the mime type    \n    MimeType = Tools.GetMimeType(Tools.GetExtension(PathName));\n    ToLog.ItemRequested.MimeType = MimeType;\n    Encoding = Tools.GetEncodingFromMimeType(MimeType);\n    ToLog.ItemRequested.Encoding = Encoding;\n\n   //Reads the file\n\n    fs.readFile(PathName, Encoding, function(error, file) {\n    \n        if (error) {\n            code = 500;\n            content = code + \" \" + error;\n            console.log(error);\n            ToLog.Errors.push(error);\n            MimeType = \"text/plain\";\n            Encoding = \"utf8\";\n            if (error.errno === 34) {\n                code = 404;\n                content = code + \" \" + error;\n                console.log(error);\n                ToLog.Errors.push(error);\n                MimeType = \"text/plain\";\n                Encoding = \"utf8\";\n            } else {\n                code = 500;\n                content = code + \" \" + error;\n                console.log(error);\n                ToLog.Errors.push(error);\n                MimeType = \"text/plain\";\n                Encoding = \"utf8\";\n            }\n        \n        } else if (file) {\n            content = file;\n            code = 200;\n            \n        }\n   \n\n        response.writeHead(code, {\"Content-Type\": MimeType, 'Access-Control-Allow-Origin': '*'});\n        response.write(content, Encoding);\n        response.end();\n        SentAt = Date.now() / 1000;\n        \n        \n        \n    });\n    ToLog.Response.MimeType = MimeType;\n    ToLog.Response.code = code;\n    ToLog.Response.SentAt = SentAt;\n    console.log(ToLog);\n};\n\n\nexports.HandleRequest = HandleRequest;\n"]],"start1":0,"start2":0,"length1":0,"length2":4033}]],"length":4033}
{"contributors":[],"silentsave":true,"ts":1359906793471,"patch":[[{"diffs":[[0,"eRequest"],[-1,";"],[1,"x"],[0,"\n"]],"start1":4023,"start2":4023,"length1":10,"length2":10}]],"length":4033,"saved":false}
{"ts":1359906794061,"patch":[[{"diffs":[[0,"dleReque"],[-1,"st"],[0,"x\n"]],"start1":4021,"start2":4021,"length1":12,"length2":10}]],"length":4031,"saved":false}
{"ts":1359906795746,"patch":[[{"diffs":[[0,"= Handle"],[-1,"Reque"],[0,"x\n"]],"start1":4016,"start2":4016,"length1":15,"length2":10}]],"length":4026,"saved":false}
{"ts":1359906796283,"patch":[[{"diffs":[[0,"= Handle"],[1,"r"],[0,"x\n"]],"start1":4016,"start2":4016,"length1":10,"length2":11}]],"length":4027,"saved":false}
{"ts":1359906798689,"patch":[[{"diffs":[[0," Handler"],[-1,"x"],[0,"\n"]],"start1":4017,"start2":4017,"length1":10,"length2":9}]],"length":4026,"saved":false}
{"ts":1359906800061,"patch":[[{"diffs":[[0," Handler"],[1,";"],[0,"\n"]],"start1":4017,"start2":4017,"length1":9,"length2":10}]],"length":4027,"saved":false}
{"ts":1359906806897,"patch":[[{"diffs":[[0,"= Handle"],[-1,"r"],[1,"Request"],[0,";\n"]],"start1":4016,"start2":4016,"length1":11,"length2":17}]],"length":4033,"saved":false}
{"ts":1359906811842,"patch":[[{"diffs":[[0,"s.Handle"],[-1,"Request"],[1,"r"],[0," = Handl"]],"start1":4000,"start2":4000,"length1":23,"length2":17}]],"length":4027,"saved":false}
