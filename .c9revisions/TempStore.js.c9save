{"ts":1353689467171,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"\n//Copyright (c) 2012 Samarth AGARWAL \n//Permission is hereby granted, free of charge, \n//to any person obtaining a copy of this software and associated documentation files (the \"Software\"), \n//to deal in the Software without restriction, \n//including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, \n//and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n//The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n//THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, \n//EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \n//FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. \n//IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, \n//DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, \n//ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\nenyo.kind({\n    //Kind name and couple of options\n    name: \"App\",\n\tfit: true,\n    kind:\"Panels\",\n    classes:\"app-panels onyx\",\n    arrangerKind: \"CollapsingArranger\",\n\t\n    \n    \n    \n    \n    //Components\n    components: [ \n        //The 1st Panel that will contain a scoller to show the tweets, the toolbar will contain the view picker.\n        {name: \"Panel1\", layoutKind: \"FittableRowsLayout\", classes: \"Panel1 onyx\", components: [ \n            {kind:\"onyx.MoreToolbar\",  components: [ \n                {kind:\"onyx.Menu\", content: \"Hello\"}\n                ],},\n                //End of more toolbar\n               \n                  //The search box\n            {kind: \"onyx.InputDecorator\", classes:\"SearchTerm\", components: [\n                //Input\n                {kind: \"onyx.Input\", name: \"SearchTerm\", placeholder: \"Search\", onkeydown: \"searchOnEnter\",},\n                    //The image that makes the search box more pleasing.\n                {tag: \"Image\", src: \"assets/search-input-search.png\", ontap: \"Search\",},\n                //End of SearchTerm\n            ],},\n        {kind: \"enyo.Scroller\",name: \"TweetList\", fit: true, touchOverscroll: false}\n        \n        //End of first Panel        \n        ],},\n        \n        \n        \n        \n        //The second Panel will show the tweet, images and comments. \n        {name: \"Tweet\", classes: \"onyx\", components: [ \n            //More toolbar.\n           \n            {kind:\"onyx.MoreToolbar\", components: [ \n                {kind: \"onyx.Grabber\", ontap: \"SwitchPanel\",}, {content: \"Tweet\"}\n                //End of More Toolbar\n            ],  },\n            //BigTweet\n            {kind: \"Sam.BigTweet\"}\n            \n            \n               //End of Panel2\n                ],  },\n \n ],\n \n    \n    \n    //Function to Switch the current pannel to the previous one.\n    SwitchPanel: function() {\n        //Makes sure we are not at index 0, wouldn't want to cause an exeption\n        if (this.index === 0) {\n            return false;\n        } else {\n            this.setIndex(this.index-1);\n            return true;\n        }\n    },\n    \n\n //Prepeares a tweet and adds it to tweetlist  \n addTweet: function(inResult) {\n    this.createComponent({\n      kind: \"Sam.Tweet\",\n      container: this.$.TweetList,\n      Picture: inResult.profile_image_url_https,\n      UserName: inResult.from_user_name,\n      handle: inResult.from_user,\n      Message: inResult.text,\n    });\n },\n    \n    //Function to allow users to use the enter key to search\n    searchOnEnter: function(inSender, inEvent) {\n        //Apearntly the enter key keycode is 13\n        if (inEvent.keyCode === 13) {\n        this.Search();\n        return true;\n        }\n  },\n  //Function that retrives data from twitter\n  Search: function(inSender, inEvent) {\n      //Gets the query\n      var Query = this.$.SearchTerm.hasNode().value;\n      //Creates a new service; maybe I should use enyo.webservice instead.\n      var service = new enyo.JsonpRequest({url: \"https://search.twitter.com/search.json\", callback: \"callback\"});\n    service.response(enyo.bind(this, \"ShowSearchResults\"));\n    service.go({q: Query});\n},\n    //Shows the search results on screen; code copied form enyo tutorial todo: Rewrite code.\n    ShowSearchResults: function(inRequest, inResponse) {\n        //Checking if there is any data in \"inResponse\"\n        console.log(inResponse);\n        if (inResponse) {\n            this.$.TweetList.destroyClientControls();\n            enyo.forEach(inResponse.results, this.addTweet, this);\n        this.$.TweetList.render();\n        }\n        // If there is no data in inResponse then return\n        else {return;}\n    }\n            \n\n});\n"]],"start1":0,"start2":0,"length1":0,"length2":4781}]],"length":4781}
